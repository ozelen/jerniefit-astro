---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);

// Handle hash links properly
let isActive = false;
if (href.startsWith('/#')) {
  // For hash links with absolute path, don't highlight on server side
  // The actual section highlighting will be handled by client-side JavaScript
  isActive = false;
} else if (href.startsWith('#')) {
  // For relative hash links, don't highlight on server side
  isActive = false;
} else {
  // For regular links, use the existing logic
  isActive = href === pathname || href === '/' + (subpath?.[0] || '');
}
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
