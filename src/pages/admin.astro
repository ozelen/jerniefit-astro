---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<!DOCTYPE html>
<html lang="es">
	<head>
		<BaseHead title="Admin - Evaluaciones - JernieFit" description="Panel de administraci√≥n para revisar evaluaciones de clientes." />
		<style>
			body {
				margin: 0;
				padding: 0;
				font-family: 'Arial', 'Helvetica', sans-serif;
				background: #000000;
				color: #ffffff;
			}
			
			.admin-container {
				padding-top: 100px;
				min-height: 100vh;
				background: #000000;
			}
			
			.admin-header {
				text-align: center;
				padding: 60px 20px 40px;
				background: linear-gradient(135deg, rgba(255, 20, 147, 0.2), rgba(0, 0, 0, 0.8));
				border-bottom: 2px solid #ff1493;
			}
			
			.admin-header h1 {
				font-size: 3rem;
				font-weight: 900;
				text-transform: uppercase;
				letter-spacing: 2px;
				color: #ff1493;
				margin-bottom: 1rem;
			}
			
			.admin-content {
				max-width: 1200px;
				margin: 0 auto;
				padding: 40px 20px;
			}
			
			.stats-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
				gap: 20px;
				margin-bottom: 40px;
			}
			
			.stat-card {
				background: #111111;
				border: 1px solid #ff1493;
				padding: 20px;
				text-align: center;
			}
			
			.stat-number {
				font-size: 2rem;
				font-weight: 900;
				color: #ff1493;
				margin-bottom: 10px;
			}
			
			.stat-label {
				color: #cccccc;
				text-transform: uppercase;
				letter-spacing: 1px;
			}
			
			.assessments-list {
				background: #111111;
				border: 1px solid #ff1493;
				padding: 20px;
			}
			
			.assessment-item {
				background: #000000;
				border: 1px solid #333333;
				padding: 20px;
				margin-bottom: 20px;
			}
			
			.assessment-item:last-child {
				margin-bottom: 0;
			}
			
			.assessment-header {
				display: flex;
				justify-content: space-between;
				align-items: center;
				margin-bottom: 15px;
			}
			
			.assessment-name {
				font-size: 1.2rem;
				font-weight: 700;
				color: #ff1493;
			}
			
			.assessment-date {
				color: #cccccc;
				font-size: 0.9rem;
			}
			
			.assessment-details {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
				gap: 15px;
			}
			
			.detail-item {
				background: #111111;
				padding: 10px;
				border-left: 3px solid #ff1493;
			}
			
			.detail-label {
				font-weight: 600;
				color: #ff1493;
				font-size: 0.9rem;
				text-transform: uppercase;
				margin-bottom: 5px;
			}
			
			.detail-value {
				color: #ffffff;
			}
			
			.loading {
				text-align: center;
				padding: 40px;
				color: #ff1493;
				font-size: 1.2rem;
			}
			
			.error {
				text-align: center;
				padding: 40px;
				color: #ff6b6b;
				font-size: 1.2rem;
			}
			
			.refresh-btn {
				background: linear-gradient(135deg, #ff1493, #ff69b4);
				color: #ffffff;
				border: none;
				padding: 18px 35px;
				font-size: 1rem;
				font-weight: 700;
				text-transform: uppercase;
				letter-spacing: 1px;
				cursor: pointer;
				margin-bottom: 20px;
				transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
				border-radius: 50px;
				position: relative;
				overflow: hidden;
				box-shadow: 0 6px 20px rgba(255, 20, 147, 0.3);
			}
			
			.refresh-btn::before {
				content: '';
				position: absolute;
				top: 0;
				left: -100%;
				width: 100%;
				height: 100%;
				background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
				transition: left 0.5s;
			}
			
			.refresh-btn:hover::before {
				left: 100%;
			}
			
			.refresh-btn:hover {
				background: linear-gradient(135deg, #e0115f, #ff1493);
				transform: translateY(-3px) scale(1.05);
				box-shadow: 0 8px 25px rgba(255, 20, 147, 0.5);
			}
			
			@media (max-width: 768px) {
				.admin-header h1 {
					font-size: 2rem;
				}
				
				.assessment-header {
					flex-direction: column;
					align-items: flex-start;
					gap: 10px;
				}
				
				.assessment-details {
					grid-template-columns: 1fr;
				}
			}
		</style>
	</head>
	<body>
		<!-- Google Tag Manager (noscript) -->
		<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-M54PBN6K"
		height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
		<!-- End Google Tag Manager (noscript) -->
		
		<Header />
		
		<main class="admin-container">
			<section class="admin-header">
				<h1>üîê Panel de Administraci√≥n</h1>
				<p>Revisa las evaluaciones de clientes y gestiona los datos de entrenamiento</p>
			</section>
			
			<div class="admin-content">
				<button class="refresh-btn" onclick="loadAssessments()">
					üîÑ Actualizar Datos
				</button>
				
				<div id="stats" class="stats-grid" style="display: none;">
					<div class="stat-card">
						<div class="stat-number" id="total-assessments">0</div>
						<div class="stat-label">Total Evaluaciones</div>
					</div>
					<div class="stat-card">
						<div class="stat-number" id="this-month">0</div>
						<div class="stat-label">Este Mes</div>
					</div>
					<div class="stat-card">
						<div class="stat-number" id="this-week">0</div>
						<div class="stat-label">Esta Semana</div>
					</div>
				</div>
				
				<div id="assessments-container">
					<div class="loading">Cargando evaluaciones...</div>
				</div>
			</div>
		</main>
		
		<Footer />
		
		<script>
			async function loadAssessments() {
				const container = document.getElementById('assessments-container');
				const stats = document.getElementById('stats');
				
				try {
					container.innerHTML = '<div class="loading">Cargando evaluaciones...</div>';
					
					const response = await fetch('https://jerniefit-client-assessment-api.o-497.workers.dev/api/assessments');
					
					if (!response.ok) {
						throw new Error('Error al cargar las evaluaciones');
					}
					
					const data = await response.json();
					const assessments = data.assessments || [];
					
					// Update stats
					updateStats(assessments);
					stats.style.display = 'grid';
					
					// Display assessments
					if (assessments.length === 0) {
						container.innerHTML = '<div class="error">No hay evaluaciones disponibles</div>';
						return;
					}
					
					container.innerHTML = `
						<div class="assessments-list">
							<h3 style="color: #ff1493; margin-bottom: 20px; text-transform: uppercase;">Evaluaciones Recientes</h3>
							${assessments.map(assessment => createAssessmentHTML(assessment)).join('')}
						</div>
					`;
					
				} catch (error) {
					console.error('Error:', error);
					container.innerHTML = '<div class="error">Error al cargar las evaluaciones. Por favor, int√©ntalo de nuevo.</div>';
				}
			}
			
			function updateStats(assessments) {
				const now = new Date();
				const thisMonth = new Date(now.getFullYear(), now.getMonth(), 1);
				const thisWeek = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
				
				const totalAssessments = assessments.length;
				const thisMonthCount = assessments.filter(a => new Date(a.created_at) >= thisMonth).length;
				const thisWeekCount = assessments.filter(a => new Date(a.created_at) >= thisWeek).length;
				
				document.getElementById('total-assessments').textContent = totalAssessments;
				document.getElementById('this-month').textContent = thisMonthCount;
				document.getElementById('this-week').textContent = thisWeekCount;
			}
			
			function createAssessmentHTML(assessment) {
				const date = new Date(assessment.created_at).toLocaleDateString('es-ES', {
					year: 'numeric',
					month: 'long',
					day: 'numeric',
					hour: '2-digit',
					minute: '2-digit'
				});
				
				const objetivos = JSON.parse(assessment.objetivos || '[]').join(', ');
				const disponibilidad = JSON.parse(assessment.disponibilidad_dias || '[]').join(', ');
				
				return `
					<div class="assessment-item">
						<div class="assessment-header">
							<div class="assessment-name">${assessment.nombre_completo}</div>
							<div class="assessment-date">${date}</div>
						</div>
						<div class="assessment-details">
							<div class="detail-item">
								<div class="detail-label">Edad</div>
								<div class="detail-value">${assessment.edad} a√±os</div>
							</div>
							<div class="detail-item">
								<div class="detail-label">Altura</div>
								<div class="detail-value">${assessment.altura} cm</div>
							</div>
							${assessment.peso_actual ? `
							<div class="detail-item">
								<div class="detail-label">Peso</div>
								<div class="detail-value">${assessment.peso_actual} kg</div>
							</div>
							` : ''}
							<div class="detail-item">
								<div class="detail-label">Objetivos</div>
								<div class="detail-value">${objetivos}</div>
							</div>
							<div class="detail-item">
								<div class="detail-label">Horario Preferido</div>
								<div class="detail-value">${assessment.horario_preferido}</div>
							</div>
							<div class="detail-item">
								<div class="detail-label">Lugar Preferido</div>
								<div class="detail-value">${assessment.lugar_preferido}</div>
							</div>
							<div class="detail-item">
								<div class="detail-label">Disponibilidad</div>
								<div class="detail-value">${disponibilidad}</div>
							</div>
							${assessment.condicion_medica_detalle ? `
							<div class="detail-item">
								<div class="detail-label">Condici√≥n M√©dica</div>
								<div class="detail-value">${assessment.condicion_medica_detalle}</div>
							</div>
							` : ''}
							${assessment.otros_detalles ? `
							<div class="detail-item">
								<div class="detail-label">Otros Detalles</div>
								<div class="detail-value">${assessment.otros_detalles}</div>
							</div>
							` : ''}
						</div>
					</div>
				`;
			}
			
			// Load assessments on page load
			document.addEventListener('DOMContentLoaded', loadAssessments);
		</script>
	</body>
</html>
